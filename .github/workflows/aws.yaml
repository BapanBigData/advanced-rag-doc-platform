name: CI/CD to ECS Fargate

on:
  workflow_run:
    workflows: ["Run Unit Tests"]
    types:
      - completed

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: advanced-rag-system

permissions:
  id-token: write
  contents: read

jobs:
  check-status:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    steps:
      - name: CI passed on main branch
        run: echo "CI passed on main branch, proceeding to build and deploy."

  build-and-push:
    name: Build & Push Docker Image
    needs: [check-status]
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image (latest only)
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:latest"
          echo "Building image: $IMAGE_URI"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"
          echo "image=$IMAGE_URI" >> "$GITHUB_OUTPUT"
          echo "âœ… Pushed: $IMAGE_URI"
